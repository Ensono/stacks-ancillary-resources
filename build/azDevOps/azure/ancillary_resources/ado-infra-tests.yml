
# Include necessary variables for this pipeline file
variables:
  - group: ensono-sp-creds
  - template: ../agent-config-vars.yml

  # Cloud
  - name: CLOUD_PLATFORM
    value: azure

  # Licensing
  - name: CHEF_LICENSE
    value: accept-silent

name: infra-tests-$(Date:yyyyMMdd).$(Rev:r)

# Add schedule to run the infra tests everyday
schedules:
  - cron: 0 6 * * *
    branches:
      include:
        - main
        - feature/remote-tfstate
    always: true

stages:

  - stage: infrastructure_tests

    jobs:

      - job: terraform_state
        displayName: Terraform State
        pool:
          vmImage: $(pool_vm_image)

        variables:
          - template: azdo-pipeline-vars.yml

        steps:
          - template: ../templates/setup.yml
            parameters:
              TaskctlVersion: ${{ variables.TaskctlVersion }}
              StacksEnvfileVersion: ${{ variables.StacksEnvfileVersion }}

          - template: ../templates/infra-tests.yml
            parameters:
              CHEF_LICENSE: $(CHEF_LICENSE)
              TESTS_PATH: /app/src/terraform_state/tests/$(CLOUD_PLATFORM)
              INSPEC_ARGS: "--input resource_group_name=$(resource_group_name) storage_account_name=$(storage_account_name) region=$(location)"
              REPORT_FILENAME: inspec_azure_tf_state.xml

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: outputs/tests/inspec_azure_tf_state.xml
              testRunTitle: Terraform Remote State Tests
              failTaskOnFailedTests: true

      - job: ancillary_resources
        displayName: Ancillary Resources
        pool:
          vmImage: $(pool_vm_image)

        variables:
          - template: ancillary-resources-vars.yml

        steps:
          - template: ../templates/setup.yml
            parameters:
              TaskctlVersion: ${{ variables.TaskctlVersion }}
              StacksEnvfileVersion: ${{ variables.StacksEnvfileVersion }}

          - template: ../templates/infra-tests.yml
            parameters:
              CHEF_LICENSE: $(CHEF_LICENSE)
              TESTS_PATH: /app/src/ancillary_resources/tests/$(CLOUD_PLATFORM)
              INSPEC_ARGS: "--input resource_group_name=$(resource_group_name) region=$(location) container_registry_name=$(container_registry_name) dns_zones='$(dns_zones)' la_workspace=$(la_workspace) la_sku=$(la_sku) la_retention=$(la_retention) key_vault='$(key_vault)' azure_application_id=$(arm_client_id)"
              REPORT_FILENAME: inspec_azure_ancillary_resources.xml

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: JUnit
              testResultsFiles: outputs/tests/inspec_azure_ancillary_resources.xml
              testRunTitle: Ancillary Resources Tests
              failTaskOnFailedTests: true
