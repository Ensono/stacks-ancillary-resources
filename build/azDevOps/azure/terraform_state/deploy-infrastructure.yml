name: "$(Build.SourceBranchName)-init"

# Include the variables for this pipeline file
variables:
  - template: azdo-pipeline-vars.yml

stages:

  - stage: Deployment

    jobs:
      - job: terraform_state
        displayName: Terraform State
        condition: eq(variables.deploy_tf_state, 'true')
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - task: Bash@3
            displayName: "TaskCTL: Infrastructure"
            inputs:
              targetType: inline
              script: taskctl infrastructure
            env:
              DOCKER_IMAGE_TAG: $(version_number)
              TF_FILE_LOCATION: /app/src/terraform_state/terraform/$(CLOUD_PLATFORM)
              TF_BACKEND: none

              # Azure Terraform environment variables
              TF_VAR_resource_group_name: $(resource_group_name)
              TF_VAR_location: $(location)
              TF_VAR_name: $(company)

              # AWS Terraform environment variables
              TF_VAR_region: $(location)
              TF_VAR_application_name: $(application_name)

          - template: templates/infra-tests.yml
            parameters:
              CHEF_LICENSE: $(CHEF_LICENSE)
              TESTS_PATH: /app/src/terraform_state/tests/$(CLOUD_PLATFORM)

      - job: ancillary_resources
        displayName: Ancillary Resources
        condition: and(eq(variables.deploy_ancillary_resources, 'true'), ne(variables.CLOUD_PLATFORM, 'aws'))
        pool:
          vmImage: $(pool_vm_image)

        steps:
          - task: Bash@3
            displayName: "TaskCTL: Infrastructure"
            inputs:
              targetType: inline
              script: taskctl infrastructure
            env:
              DOCKER_IMAGE_TAG: $(version_number)
              TF_FILE_LOCATION: /app/src/ancillary_resources/terraform/$(CLOUD_PLATFORM)
              TF_BACKEND: none

          - template: templates/infra-tests.yml
            parameters:
              CHEF_LICENSE: $(CHEF_LICENSE)
              TESTS_PATH: /app/src/ancillary_resources/tests/$(CLOUD_PLATFORM)

